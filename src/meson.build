inc = include_directories('.')

ui_files = files(
  './DataPlot/confirmdelete.ui',
  './DataPlot/csvconfig.ui',
  './DataPlot/datawindow.ui',
  './DataPlot/filloptions.ui',
  './DataPlot/modelchoicewidget.ui',
  './DataPlot/polynomialmodelwidget.ui',
  './DataPlot/sortoptions.ui',
  './DataPlot/startingactions.ui',
  './Widgets/appsettings.ui',
  './Widgets/axissettingswidget.ui',
  './Widgets/datawidget.ui',
  './Widgets/export.ui',
  './Widgets/graphsettings.ui',
  './Widgets/graphsizesettings.ui',
  './Widgets/keyboard.ui',
  './Widgets/sheetzoom.ui',
  './Widgets/mathobjectsinput.ui',
  './Windows/about.ui',
  './Windows/settings.ui',
)

source_files = files(
  './Calculus/colorsaver.cpp',
  './Calculus/exprcalculator.cpp',
  './Calculus/function.cpp',
  './Calculus/polynomial.cpp',
  './Calculus/polynomialregression.cpp',
  './Calculus/regression.cpp',
  './Calculus/seqcalculator.cpp',
  './Calculus/treecreator.cpp',
  './Calculus/expreditbackend.cpp',
  './Calculus/funcvaluessaver.cpp',
  './Calculus/regressionvaluessaver.cpp',
  './DataPlot/columnactionswidget.cpp',
  './DataPlot/columnselectorwidget.cpp',
  './DataPlot/csvhandler.cpp',
  './DataPlot/datatable.cpp',
  './DataPlot/datawindow.cpp',
  './DataPlot/modelchoicewidget.cpp',
  './DataPlot/modelwidget.cpp',
  './DataPlot/polynomialmodelwidget.cpp',
  './DataPlot/rowactionswidget.cpp',
  './DataPlot/rowselectorwidget.cpp',
  './GraphDraw/gridcalculator.cpp',
  './GraphDraw/interactivegraph.cpp',
  './GraphDraw/interactivegraphcontainer.cpp',
  './GraphDraw/subgraph.cpp',
  './GraphDraw/graph.cpp',
  './GraphDraw/mathobjectdraw.cpp',
  './GraphDraw/viewmapper.cpp',
  './GraphDraw/axismapper.cpp',
  './Widgets/abstractfuncwidget.cpp',
  './Widgets/appsettings.cpp',
  './Widgets/datawidget.cpp',
  './Widgets/export.cpp',
  './Widgets/expressionlineedit.cpp',
  './Widgets/funcwidget.cpp',
  './Widgets/graphsettings.cpp',
  './Widgets/graphsizesettings.cpp',
  './Widgets/integrationwidget.cpp',
  './Widgets/keyboard.cpp',
  './Widgets/mathobjectsinput.cpp',
  './Widgets/numberlineedit.cpp',
  './Widgets/parconfwidget.cpp',
  './Widgets/pareqcontroller.cpp',
  './Widgets/pareqwidget.cpp',
  './Widgets/popupwidget.cpp',
  './Widgets/qcolorbutton.cpp',
  './Widgets/seqwidget.cpp',
  './Widgets/sheetzoom.cpp',
  './Widgets/axissettingswidget.cpp',
  './Windows/about.cpp',
  './Windows/updatecheck.cpp',
  './Windows/mainwindow.cpp',
  './Windows/settings.cpp',
  './information.cpp',
  './structures.cpp',
)

moc_header_files = files(
  './Calculus/function.h',
  './Calculus/polynomialregression.h',
  './Calculus/regression.h',
  './Calculus/seqcalculator.h',
  './Calculus/colorsaver.h',
  './Calculus/expreditbackend.h',
  './Calculus/regressionvaluessaver.h',
  './DataPlot/columnactionswidget.h',
  './DataPlot/columnselectorwidget.h',
  './DataPlot/csvhandler.h',
  './DataPlot/datatable.h',
  './DataPlot/datawindow.h',
  './DataPlot/modelchoicewidget.h',
  './DataPlot/modelwidget.h',
  './DataPlot/polynomialmodelwidget.h',
  './DataPlot/rowactionswidget.h',
  './DataPlot/rowselectorwidget.h',
  './GraphDraw/gridcalculator.h',
  './GraphDraw/interactivegraph.h',
  './GraphDraw/interactivegraphcontainer.h',
  './GraphDraw/subgraph.h',
  './GraphDraw/graph.h',
  './GraphDraw/mathobjectdraw.h',
  './Widgets/abstractfuncwidget.h',
  './Widgets/appsettings.h',
  './Widgets/datawidget.h',
  './Widgets/export.h',
  './Widgets/expressionlineedit.h',
  './Widgets/funcwidget.h',
  './Widgets/graphsettings.h',
  './Widgets/graphsizesettings.h',
  './Widgets/integrationwidget.h',
  './Widgets/keyboard.h',
  './Widgets/mathobjectsinput.h',
  './Widgets/numberlineedit.h',
  './Widgets/parconfwidget.h',
  './Widgets/pareqcontroller.h',
  './Widgets/pareqwidget.h',
  './Widgets/popupwidget.h',
  './Widgets/qcolorbutton.h',
  './Widgets/seqwidget.h',
  './Widgets/sheetzoom.h',
  './Widgets/axissettingswidget.h',
  './Windows/about.h',
  './Windows/mainwindow.h',
  './Windows/settings.h',
  './Windows/updatecheck.h',
  './information.h',
  './structures.h',
)

qt6 = import('qt6')

compiled_ressources = qt6.compile_resources(sources: files('../ressources.qrc'))
compiled_ui = qt6.compile_ui(sources: ui_files)
moc_files = qt6.compile_moc(
  headers : moc_header_files,
  include_directories: inc,
  dependencies: qt6_dep
)

zg_static_lib = static_library('ZeGrapherLib',
  source_files, compiled_ressources, compiled_ui, moc_files,
  include_directories: inc,
  dependencies: [qt6_dep, boost_dep, zecalculator_dep])

executable('ZeGrapher', 'main.cpp', compiled_ui, compiled_ressources,
  link_with: zg_static_lib,
  include_directories: inc,
  dependencies: [qt6_dep, boost_dep, zecalculator_dep],
  install: true)
